name: User - Storybook - Sandbox

on:
  push:
    branches: [ sandbox ]
    paths:
    - 'config/**'
    - 'frontend/_core/css/**'
    - 'frontend/user/css/**'
    - 'frontend/_core/js/**'
    - 'frontend/_core/templates/**'
    - 'frontend/user/storybook/**'
    - 'frontend/user/templates/**'

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo ::set-env name=workspace::$GITHUB_WORKSPACE

      - name: checkout repo
        uses: actions/checkout@v1

      - name: Extract label 
        shell: bash
        run: echo "##[set-output name=label;]$(echo \"[${GITHUB_REF#refs/heads/} - user/storybook]\")"
        id: extract_label

      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} starting...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: install node
        uses: actions/setup-node@v1

      - name: install css deps
        run: npm install
        working-directory: "./frontend/user/css"
        
      - name: install npm deps
        run: npm install
        working-directory: "./frontend/user/storybook"

      - name: build 
        run: npm run storybook:build-sandbox
        working-directory: "./frontend/user/storybook"
        env:
          LOCAL_CDN_FRONTEND_DIR: ${{ env.workspace }}/frontend

      - name: install google cloud sdk
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '295.0.0'
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_JSON_KEY_SANDBOX }}

      - name: deploy to google cloud
        run: gsutil -m rsync -d -r frontend/user/storybook/dist/storybook-build gs://ji-cloud-sandbox-storybook-origin-eu-001/user

      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
