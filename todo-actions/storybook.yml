name: Test, Build, and Deploy

on: [push]
    
jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Extract label 
        shell: bash
        run: echo "##[set-output name=label;]$(echo \"[${GITHUB_REF#refs/heads/} - ${{github.event.repository.name}} - build]\")"
        id: extract_label

      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} starting...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: checkout repo
        uses: actions/checkout@v1

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install node
        uses: actions/setup-node@v1

      - name: install npm deps
        run: npm install

      - name: test
        run: npm test

      - name: build 
        run: npm run storybook:build-release 

      - name: deploy to firebase (sandbox)
        uses: w9jds/firebase-action@v1.0.1
        with:
          args: deploy --project ji-cloud-developer-sandbox --only hosting:ji-cloud-developer-storybook
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CFYR62BRC\",\"text\":\"${{steps.extract_label.outputs.label}} ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()